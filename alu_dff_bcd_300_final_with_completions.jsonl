{"prompt": "Write a SystemVerilog assertion to check overflow during addition in a 16-bit ALU.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to check overflow during addition in a 16-bit ALU."}
{"prompt": "Write a SystemVerilog assertion to check overflow during addition in a 32-bit ALU.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to check overflow during addition in a 32-bit ALU."}
{"prompt": "Write a SystemVerilog module for a 8-bit ALU that supports ADD, SUB, AND, OR.", "completion": "// SystemVerilog module for: Write a SystemVerilog module for a 8-bit ALU that supports ADD, SUB, AND, OR."}
{"prompt": "Write a SystemVerilog module for a 32-bit ALU that supports ADD, SUB, SHIFT_LEFT, SHIFT_RIGHT.", "completion": "// SystemVerilog module for: Write a SystemVerilog module for a 32-bit ALU that supports ADD, SUB, SHIFT_LEFT, SHIFT_RIGHT."}
{"prompt": "Write a SystemVerilog module for a 8-bit ALU that supports ADD, SUB, XOR, NOR.", "completion": "// SystemVerilog module for: Write a SystemVerilog module for a 8-bit ALU that supports ADD, SUB, XOR, NOR."}
{"prompt": "Write a SystemVerilog module for a 32-bit ALU that supports ADD, SUB, AND, OR.", "completion": "// SystemVerilog module for: Write a SystemVerilog module for a 32-bit ALU that supports ADD, SUB, AND, OR."}
{"prompt": "Write a SystemVerilog module for a 16-bit ALU that supports ADD, SUB, AND, OR.", "completion": "// SystemVerilog module for: Write a SystemVerilog module for a 16-bit ALU that supports ADD, SUB, AND, OR."}
{"prompt": "Write a SystemVerilog assertion to check valid operation selection in a 8-bit ALU.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to check valid operation selection in a 8-bit ALU."}
{"prompt": "Write a SystemVerilog assertion to check carry flag generation in a 8-bit ALU.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to check carry flag generation in a 8-bit ALU."}
{"prompt": "Write a SystemVerilog assertion to check carry flag generation in a 16-bit ALU.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to check carry flag generation in a 16-bit ALU."}
{"prompt": "Write a SystemVerilog assertion to check overflow during addition in a 8-bit ALU.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to check overflow during addition in a 8-bit ALU."}
{"prompt": "Write a SystemVerilog module for a 8-bit ALU that supports ADD, SUB, SHIFT_LEFT, SHIFT_RIGHT.", "completion": "// SystemVerilog module for: Write a SystemVerilog module for a 8-bit ALU that supports ADD, SUB, SHIFT_LEFT, SHIFT_RIGHT."}
{"prompt": "Write a SystemVerilog assertion to check carry flag generation in a 32-bit ALU.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to check carry flag generation in a 32-bit ALU."}
{"prompt": "Write a SystemVerilog module for a 16-bit ALU that supports ADD, SUB, XOR, NOR.", "completion": "// SystemVerilog module for: Write a SystemVerilog module for a 16-bit ALU that supports ADD, SUB, XOR, NOR."}
{"prompt": "Write a SystemVerilog assertion to check valid operation selection in a 16-bit ALU.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to check valid operation selection in a 16-bit ALU."}
{"prompt": "Write a SystemVerilog module for a 32-bit ALU that supports ADD, SUB, XOR, NOR.", "completion": "// SystemVerilog module for: Write a SystemVerilog module for a 32-bit ALU that supports ADD, SUB, XOR, NOR."}
{"prompt": "Write a SystemVerilog assertion to check valid operation selection in a 32-bit ALU.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to check valid operation selection in a 32-bit ALU."}
{"prompt": "Write a SystemVerilog module for a 16-bit ALU that supports ADD, SUB, SHIFT_LEFT, SHIFT_RIGHT.", "completion": "// SystemVerilog module for: Write a SystemVerilog module for a 16-bit ALU that supports ADD, SUB, SHIFT_LEFT, SHIFT_RIGHT."}
{"prompt": "Design an SVA to ensure output Q follows D on rising clock edge.", "completion": "// SystemVerilog module for: Design an SVA to ensure output Q follows D on rising clock edge."}
{"prompt": "Design a D flip-flop in SystemVerilog with synchronous set and reset.", "completion": "// SystemVerilog module for: Design a D flip-flop in SystemVerilog with synchronous set and reset."}
{"prompt": "Write a SystemVerilog module for a positive-edge triggered D flip-flop with reset.", "completion": "// SystemVerilog module for: Write a SystemVerilog module for a positive-edge triggered D flip-flop with reset."}
{"prompt": "Implement a D flip-flop with clock enable and asynchronous clear in SystemVerilog.", "completion": "// SystemVerilog module for: Implement a D flip-flop with clock enable and asynchronous clear in SystemVerilog."}
{"prompt": "Create a property to check reset functionality in a SystemVerilog DFF.", "completion": "// SystemVerilog module for: Create a property to check reset functionality in a SystemVerilog DFF."}
{"prompt": "Write a SystemVerilog assertion to verify correct D flip-flop behavior.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to verify correct D flip-flop behavior."}
{"prompt": "Assert that a DFF holds its value when enable is low.", "completion": "// SystemVerilog module for: Assert that a DFF holds its value when enable is low."}
{"prompt": "Create a SystemVerilog DFF with asynchronous reset and enable signal.", "completion": "// SystemVerilog module for: Create a SystemVerilog DFF with asynchronous reset and enable signal."}
{"prompt": "Create an assertion to verify BCD output remains in valid range after increment.", "completion": "// SystemVerilog assertion for: Create an assertion to verify BCD output remains in valid range after increment."}
{"prompt": "Design a property to detect invalid BCD digits during decrement operation.", "completion": "// SystemVerilog module for: Design a property to detect invalid BCD digits during decrement operation."}
{"prompt": "Write a BCD decrementor module in SystemVerilog.", "completion": "// SystemVerilog module for: Write a BCD decrementor module in SystemVerilog."}
{"prompt": "Design a BCD incrementor in SystemVerilog handling carry over.", "completion": "// SystemVerilog module for: Design a BCD incrementor in SystemVerilog handling carry over."}
{"prompt": "Implement a SystemVerilog module that performs BCD increment with enable and reset.", "completion": "// SystemVerilog module for: Implement a SystemVerilog module that performs BCD increment with enable and reset."}
{"prompt": "Create a 4-bit BCD incrementor module in SystemVerilog.", "completion": "// SystemVerilog module for: Create a 4-bit BCD incrementor module in SystemVerilog."}
{"prompt": "Write a SystemVerilog assertion to check correct BCD increment behavior.", "completion": "// SystemVerilog assertion for: Write a SystemVerilog assertion to check correct BCD increment behavior."}
{"prompt": "Design a 4-bit BCD decrementor with borrow handling in SystemVerilog.", "completion": "// SystemVerilog module for: Design a 4-bit BCD decrementor with borrow handling in SystemVerilog."}
{"prompt": "Write a SystemVerilog module to increment a BCD digit.", "completion": "// SystemVerilog module for: Write a SystemVerilog module to increment a BCD digit."}
{"prompt": "Assert that BCD incrementor correctly handles carry out.", "completion": "// SystemVerilog module for: Assert that BCD incrementor correctly handles carry out."}
